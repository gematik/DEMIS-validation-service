# Default values for validation-service.

# Number of Pod Replicas desired
replicaCount: 1

# Enables debug mode
debug:
  enable: false

# Required Values for the Chart
required:
  # Define the docker image
  image:
    # The repository where is stored the docker image "validation-service"
    repository: europe-west3-docker.pkg.dev/gematik-all-infra-prod/demis-dev
    # The name of the image
    name: validation-service
    # Overrides the image tag whose default is the chart appVersion. 
    # If not given, the Chart AppVersion will be used
    tag: null
  # Version of the profiles to be used
  profiles:
    version: 1.1.1-b15

# Define custom Container Entrypoint and Arguments (e.g. JVM Tuning)
# If not given, the Entrypoint defined in Dockerfile will be used
application:
  entrypoint: ["java"]
  parameters: ["-XX:ActiveProcessorCount=2", "-XX:MaxRAMPercentage=95.0", "-XX:+TieredCompilation", "-XX:+UseSerialGC", "-jar", "-Xmx1G", "/app.jar"]

imagePullPolicy: IfNotPresent
# Define Image Pull Secrets if using private registry
imagePullSecrets: []
nameOverride: "validation-service"
fullnameOverride: "validation-service"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

# Pod Security Context - applies to all containers in a Pod
podSecurityContext: 
  # The GID to tell the Kubelet to modify permissions of a volume owned by a pod
  fsGroup: 10000
  # Determines when to apply fsGroup actions - "Always" is the default
  fsGroupChangePolicy: "OnRootMismatch"
  # Which GID container process is assigned
  runAsGroup: 10000
  # Determine whether container process starts as root (UID 0)
  runAsNonRoot: true
  # Which UID container process is assigned
  runAsUser: 10000
  # SELinux Options - Allows for fine grained controls on applications, processes and files on a Linux Host
  #seLinuxOptions:
  # Seccomp settings
  #seccompProfile:
  # Additional supplemental GIDs the process is assigned to along with the primary
  #supplementalGroups: 2000
  # List of namespaces sysctls (Kernel Parameters) the pod should set
  #sysctls:
  #- name: "net.core.somaxconn"
  #  value: "1024"

# Container Security Context for a single container - Takes precedence over PodSecurityContext
securityContext:
  #defines whether container can be granted privileges beyond the parent process spawing the process
  allowPrivilegeEscalation: false
  #Define whether the container has privileged access e.g. CAP_SYS_ADMIN capability and SELinux spc_t type
  privileged: false
  #Usually no longer required. Determines whether /proc is masked to the container. Do not mount /proc from a host to a container|
  procMount: "Default"
  #Which GID container process is assigned
  runAsGroup: 10000
  # Determine whether container process starts as root (UID 0)
  runAsNonRoot: true
  #Which UID container process is assigned
  runAsUser: 10000
  #Ability to remove and /or add Linux Capabilities
  #capabilities:
  #    drop: 
  #    - all
  #    add: ["NET_ADMIN"]
  #SELinux Options - Allows for fine grained controls on applications, processes and files on a Linux Host
  #seLinuxOptions:
    #Label to match SELinux Policy; s# matching sensitivity and c# matching Category
    #level: "s0:c123,c456"
    #Label to apply to which user context the container uses
    #role: "system_r"
    #Label to apply which roles to associate continer
    #type: "container.process"
    #Label to apply to container as which user role is used
    #user: "system_u"
  #Seccomp settings
  #seccompProfile:
    #When using a Localhost type, path to the JSON detailing syscalls that are allowed or blocked
    #localhostProfile: "profile/securecontainer.json"
    # Localhost - Use host path settings to profile
    # Unconfined -  Container can run unhindered
    # RuntimeDefault - User what the container runtime defaults to
    #type: "Localhost"

service:
  type: ClusterIP
  ports:
    http: 8080

# Default Resources
resources: 
  limits:
    cpu: "1000m"
    memory: "1Gi"
  requests:
    cpu: "200m"
    memory: "1Gi"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

istio:
  enable: false